"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/contact/route";
exports.ids = ["app/api/contact/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcontact%2Froute&page=%2Fapi%2Fcontact%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontact%2Froute.ts&appDir=%2FUsers%2Falexanderamundsen%2FWebstormProjects%2Fwasd%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Falexanderamundsen%2FWebstormProjects%2Fwasd&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcontact%2Froute&page=%2Fapi%2Fcontact%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontact%2Froute.ts&appDir=%2FUsers%2Falexanderamundsen%2FWebstormProjects%2Fwasd%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Falexanderamundsen%2FWebstormProjects%2Fwasd&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_alexanderamundsen_WebstormProjects_wasd_app_api_contact_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/contact/route.ts */ \"(rsc)/./app/api/contact/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/contact/route\",\n        pathname: \"/api/contact\",\n        filename: \"route\",\n        bundlePath: \"app/api/contact/route\"\n    },\n    resolvedPagePath: \"/Users/alexanderamundsen/WebstormProjects/wasd/app/api/contact/route.ts\",\n    nextConfigOutput,\n    userland: _Users_alexanderamundsen_WebstormProjects_wasd_app_api_contact_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/contact/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjb250YWN0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZjb250YWN0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY29udGFjdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmFsZXhhbmRlcmFtdW5kc2VuJTJGV2Vic3Rvcm1Qcm9qZWN0cyUyRndhc2QlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGYWxleGFuZGVyYW11bmRzZW4lMkZXZWJzdG9ybVByb2plY3RzJTJGd2FzZCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDdUI7QUFDcEc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZXB0YS1kYXNoYm9hcmQvPzFkNzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL2FsZXhhbmRlcmFtdW5kc2VuL1dlYnN0b3JtUHJvamVjdHMvd2FzZC9hcHAvYXBpL2NvbnRhY3Qvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NvbnRhY3Qvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jb250YWN0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jb250YWN0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2FsZXhhbmRlcmFtdW5kc2VuL1dlYnN0b3JtUHJvamVjdHMvd2FzZC9hcHAvYXBpL2NvbnRhY3Qvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2NvbnRhY3Qvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcontact%2Froute&page=%2Fapi%2Fcontact%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontact%2Froute.ts&appDir=%2FUsers%2Falexanderamundsen%2FWebstormProjects%2Fwasd%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Falexanderamundsen%2FWebstormProjects%2Fwasd&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/contact/route.ts":
/*!**********************************!*\
  !*** ./app/api/contact/route.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! nodemailer */ \"(rsc)/./node_modules/nodemailer/lib/nodemailer.js\");\n// Enhanced logging for app/api/contact/route.ts\n\n\nasync function POST(request) {\n    console.log(\"API: Contact endpoint hit\");\n    try {\n        // Parse request body\n        let body;\n        try {\n            body = await request.json();\n            console.log(\"API: Request body parsed:\", body);\n        } catch (parseError) {\n            console.error(\"API: Error parsing request JSON:\", parseError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Ugyldig foresp\\xf8rselsformat\",\n                success: false\n            }, {\n                status: 400\n            });\n        }\n        // Handle test requests\n        if (body.test === true) {\n            console.log(\"API: Test request detected\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                test: true,\n                message: \"API endpoint is working\"\n            });\n        }\n        // Get all form data\n        const { name, email, message, firstName, lastName, company, website, phone } = body;\n        // Validate required fields - keep compatibility with the original required fields\n        if (!name || !email || !message) {\n            console.log(\"API: Missing required fields\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Alle feltene m\\xe5 fylles ut\",\n                success: false\n            }, {\n                status: 400\n            });\n        }\n        // ENHANCED LOGGING: Log all environment variables related to email (except password)\n        console.log(\"API: All email-related environment variables:\", {\n            EMAIL_HOST: process.env.EMAIL_HOST,\n            EMAIL_PORT: process.env.EMAIL_PORT,\n            EMAIL_USER: process.env.EMAIL_USER,\n            EMAIL_FROM: process.env.EMAIL_FROM,\n            EMAIL_TO: process.env.EMAIL_TO,\n            EMAIL_SECURE: process.env.EMAIL_SECURE,\n            EMAIL_PASS: process.env.EMAIL_PASS ? \"[PROVIDED]\" : \"[NOT PROVIDED]\",\n            EMAIL_PASSWORD: process.env.EMAIL_PASSWORD ? \"[PROVIDED]\" : \"[NOT PROVIDED]\",\n            NODE_ENV: \"development\"\n        });\n        // Get email configuration from environment variables\n        const emailUser = process.env.EMAIL_USER || \"hey@hepta.biz\";\n        // ENHANCED: Try both password variables\n        const emailPassword = process.env.EMAIL_PASSWORD || process.env.EMAIL_PASS;\n        const emailHost = process.env.EMAIL_HOST || \"smtp-relay2.webhuset.no\";\n        const emailPort = parseInt(process.env.EMAIL_PORT || \"587\", 10);\n        const emailSecure = process.env.EMAIL_SECURE === \"true\" || emailPort === 465;\n        // Log configuration (without the password)\n        console.log(\"API: Email configuration after processing:\", {\n            host: emailHost,\n            port: emailPort,\n            secure: emailSecure,\n            user: emailUser,\n            hasPassword: !!emailPassword\n        });\n        // ENHANCED: Log mode decision\n        const isDevelopmentMode = \"development\" === \"development\";\n        const shouldUseEthereal = isDevelopmentMode && !emailPassword;\n        console.log(`API: Current mode: ${isDevelopmentMode ? \"DEVELOPMENT\" : \"PRODUCTION\"}`);\n        console.log(`API: Will use Ethereal testing: ${shouldUseEthereal ? \"YES\" : \"NO\"}`);\n        // Set up the SMTP transport\n        console.log(\"API: Creating nodemailer transporter\");\n        // For Webhuset, we need proper authentication\n        console.log(\"API: Transport options:\", {\n            host: emailHost,\n            port: emailPort,\n            secure: emailSecure,\n            auth: {\n                user: emailUser,\n                pass: emailPassword ? \"[HIDDEN]\" : \"[MISSING]\"\n            }\n        });\n        // Create transporter\n        const transportOptions = {\n            host: emailHost,\n            port: emailPort,\n            secure: emailSecure,\n            auth: {\n                user: emailUser,\n                pass: emailPassword\n            },\n            // ENHANCED: Add debug mode to see detailed SMTP conversation\n            debug: true,\n            logger: true\n        };\n        const transporter = nodemailer__WEBPACK_IMPORTED_MODULE_1__.createTransport(transportOptions);\n        // Use Ethereal in development mode if no password is provided\n        if (shouldUseEthereal) {\n            console.log(\"API: In development mode without password, using Ethereal test account\");\n            try {\n                const testAccount = await nodemailer__WEBPACK_IMPORTED_MODULE_1__.createTestAccount();\n                console.log(\"API: Created test account:\", testAccount.user);\n                const testTransporter = nodemailer__WEBPACK_IMPORTED_MODULE_1__.createTransport({\n                    host: \"smtp.ethereal.email\",\n                    port: 587,\n                    secure: false,\n                    auth: {\n                        user: testAccount.user,\n                        pass: testAccount.pass\n                    },\n                    debug: true\n                });\n                // Format message with all available fields\n                const formattedMessage = formatMessageWithAllFields({\n                    message,\n                    firstName,\n                    lastName,\n                    company,\n                    website,\n                    phone\n                });\n                // ENHANCED: Log mail options\n                const mailOptions = {\n                    from: `Hepta <${emailUser}>`,\n                    to: emailUser,\n                    subject: `Kontaktskjema: ${name}`,\n                    text: `Navn: ${name}\\nE-post: ${email}\\nTelefon: ${phone || \"Ikke oppgitt\"}\\n${formattedMessage}`\n                };\n                console.log(\"API: Sending test email with options:\", {\n                    from: mailOptions.from,\n                    to: mailOptions.to,\n                    subject: mailOptions.subject\n                });\n                // Send with test account\n                const info = await testTransporter.sendMail({\n                    ...mailOptions,\n                    html: `<div>\n                  <h2>Ny henvendelse</h2>\n                  <p><b>Navn:</b> ${name}</p>\n                  <p><b>E-post:</b> ${email}</p>\n                  ${phone ? `<p><b>Telefon:</b> ${phone}</p>` : \"\"}\n                  ${company ? `<p><b>Selskap:</b> ${company}</p>` : \"\"}\n                  ${website ? `<p><b>Nettside:</b> ${website}</p>` : \"\"}\n                  <p><b>Melding:</b></p>\n                  <div>${message.replace(/\\n/g, \"<br>\")}</div>\n                 </div>`\n                });\n                console.log(\"API: Test email sent:\", info.messageId);\n                console.log(\"API: Preview URL:\", nodemailer__WEBPACK_IMPORTED_MODULE_1__.getTestMessageUrl(info));\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    testMode: true,\n                    previewUrl: nodemailer__WEBPACK_IMPORTED_MODULE_1__.getTestMessageUrl(info),\n                    message: \"E-post sendt i testmodus. Sjekk serveren for forh\\xe5ndsvisningslenke.\"\n                });\n            } catch (testError) {\n                console.error(\"API: Test account failed:\", testError);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Kunne ikke opprette testkonto for e-post\",\n                    details: String(testError),\n                    success: false\n                }, {\n                    status: 500\n                });\n            }\n        }\n        // Try to send the email via configured SMTP\n        try {\n            console.log(\"API: Attempting to verify SMTP connection\");\n            try {\n                await transporter.verify();\n                console.log(\"API: SMTP connection verified successfully\");\n            } catch (verifyError) {\n                console.error(\"API: SMTP verification failed with error:\", verifyError);\n                throw verifyError;\n            }\n            // Send the actual email\n            console.log(\"API: Proceeding to send email with verified connection\");\n            return await sendEmail(transporter, {\n                name,\n                email,\n                message,\n                firstName,\n                lastName,\n                company,\n                website,\n                phone\n            }, emailUser);\n        } catch (verifyError) {\n            console.error(\"API: SMTP verification or sending failed:\", verifyError);\n            // TRY ALTERNATIVE APPROACH: Try sending without verification first\n            console.log(\"API: Trying alternative approach - sending without verification\");\n            try {\n                return await sendEmail(transporter, {\n                    name,\n                    email,\n                    message,\n                    firstName,\n                    lastName,\n                    company,\n                    website,\n                    phone\n                }, emailUser);\n            } catch (sendError) {\n                console.error(\"API: Alternative approach also failed:\", sendError);\n                // ENHANCED: Try without auth if this is Webhuset relay server\n                if (emailHost.includes(\"webhuset\")) {\n                    console.log(\"API: Trying one more approach - Webhuset relay without auth\");\n                    try {\n                        const noAuthTransporter = nodemailer__WEBPACK_IMPORTED_MODULE_1__.createTransport({\n                            host: emailHost,\n                            port: emailPort,\n                            secure: emailSecure,\n                            // No auth for webhuset relay as per their docs\n                            debug: true\n                        });\n                        return await sendEmail(noAuthTransporter, {\n                            name,\n                            email,\n                            message,\n                            firstName,\n                            lastName,\n                            company,\n                            website,\n                            phone\n                        }, emailUser);\n                    } catch (noAuthError) {\n                        console.error(\"API: Even no-auth approach failed:\", noAuthError);\n                    }\n                }\n            }\n            // If we're in development and the real SMTP fails, try Ethereal as fallback\n            if (isDevelopmentMode) {\n                console.log(\"API: SMTP failed in development, falling back to Ethereal\");\n                try {\n                    const testAccount = await nodemailer__WEBPACK_IMPORTED_MODULE_1__.createTestAccount();\n                    const testTransporter = nodemailer__WEBPACK_IMPORTED_MODULE_1__.createTransport({\n                        host: \"smtp.ethereal.email\",\n                        port: 587,\n                        secure: false,\n                        auth: {\n                            user: testAccount.user,\n                            pass: testAccount.pass\n                        }\n                    });\n                    // Format message with all available fields\n                    const formattedMessage = formatMessageWithAllFields({\n                        message,\n                        firstName,\n                        lastName,\n                        company,\n                        website,\n                        phone\n                    });\n                    // Send with test account\n                    const info = await testTransporter.sendMail({\n                        from: `Hepta <${emailUser}>`,\n                        to: emailUser,\n                        subject: `Kontaktskjema: ${name}`,\n                        text: `Navn: ${name}\\nE-post: ${email}\\nTelefon: ${phone || \"Ikke oppgitt\"}\\n${formattedMessage}`,\n                        html: `<div>\n                    <h2>Ny henvendelse</h2>\n                    <p><b>Navn:</b> ${name}</p>\n                    <p><b>E-post:</b> ${email}</p>\n                    ${phone ? `<p><b>Telefon:</b> ${phone}</p>` : \"\"}\n                    ${company ? `<p><b>Selskap:</b> ${company}</p>` : \"\"}\n                    ${website ? `<p><b>Nettside:</b> ${website}</p>` : \"\"}\n                    <p><b>Melding:</b></p>\n                    <div>${message.replace(/\\n/g, \"<br>\")}</div>\n                   </div>`\n                    });\n                    console.log(\"API: Test email sent:\", info.messageId);\n                    console.log(\"API: Preview URL:\", nodemailer__WEBPACK_IMPORTED_MODULE_1__.getTestMessageUrl(info));\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: true,\n                        testMode: true,\n                        previewUrl: nodemailer__WEBPACK_IMPORTED_MODULE_1__.getTestMessageUrl(info),\n                        message: \"E-post sendt i testmodus. Sjekk serveren for forh\\xe5ndsvisningslenke.\"\n                    });\n                } catch (testError) {\n                    console.error(\"API: Even fallback test account failed:\", testError);\n                }\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Kunne ikke koble til e-posttjenesten. Vennligst kontakt oss direkte.\",\n                details: String(verifyError),\n                success: false\n            }, {\n                status: 500\n            });\n        }\n    } catch (error) {\n        console.error(\"API: General error in contact route:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Det oppstod en feil ved behandling av kontaktskjema\",\n            details: String(error),\n            success: false\n        }, {\n            status: 500\n        });\n    }\n}\n// Helper function to format the message text with all fields\nfunction formatMessageWithAllFields({ message, firstName, lastName, company, website, phone }) {\n    let formattedMessage = `Melding: ${message}`;\n    // Add extra information if available\n    if (firstName && lastName) {\n        formattedMessage += `\\n\\nFornavn: ${firstName}\\nEtternavn: ${lastName}`;\n    }\n    if (company) {\n        formattedMessage += `\\nSelskap: ${company}`;\n    }\n    if (website) {\n        formattedMessage += `\\nNettside: ${website}`;\n    }\n    if (phone) {\n        formattedMessage += `\\nTelefon: ${phone}`;\n    }\n    return formattedMessage;\n}\n// Helper function to send email\nasync function sendEmail(transporter, formData, fromEmail) {\n    const { name, email, message, firstName, lastName, company, website, phone } = formData;\n    try {\n        console.log(\"API: Preparing email to send\");\n        // Log the full mail configuration\n        const mailOptions = {\n            from: `Hepta <${fromEmail}>`,\n            to: fromEmail,\n            replyTo: email,\n            subject: `Kontaktskjema: ${name}`\n        };\n        console.log(\"API: Mail options:\", {\n            from: mailOptions.from,\n            to: mailOptions.to,\n            replyTo: mailOptions.replyTo,\n            subject: mailOptions.subject\n        });\n        // Format message with all details\n        const detailedMessage = formatMessageWithAllFields({\n            message,\n            firstName,\n            lastName,\n            company,\n            website,\n            phone\n        });\n        // Use the from email from environment variables\n        const fullMailOptions = {\n            ...mailOptions,\n            text: `\n        Navn: ${name}\n        E-post: ${email}\n        ${phone ? `Telefon: ${phone}` : \"\"}\n        ${company ? `Selskap: ${company}` : \"\"}\n        ${website ? `Nettside: ${website}` : \"\"}\n        \n        Melding: ${message}\n      `,\n            html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n          <h2>Ny henvendelse fra kontaktskjema</h2>\n          <p><strong>Navn:</strong> ${name}</p>\n          <p><strong>E-post:</strong> ${email}</p>\n          ${phone ? `<p><strong>Telefon:</strong> ${phone}</p>` : \"\"}\n          ${company ? `<p><strong>Selskap:</strong> ${company}</p>` : \"\"}\n          ${website ? `<p><strong>Nettside:</strong> ${website}</p>` : \"\"}\n          <p><strong>Melding:</strong></p>\n          <div style=\"background-color: #f5f5f5; padding: 15px; margin-top: 10px;\">\n            ${message.replace(/\\n/g, \"<br>\")}\n          </div>\n        </div>\n      `\n        };\n        console.log(\"API: Attempting to send email now\");\n        // Send email\n        const info = await transporter.sendMail(fullMailOptions);\n        console.log(\"API: Email sent successfully:\", info);\n        // Optional: Send auto-reply\n        try {\n            console.log(\"API: Sending auto-reply to\", email);\n            await transporter.sendMail({\n                from: `Hepta <${fromEmail}>`,\n                to: email,\n                subject: \"Takk for din henvendelse til Hepta\",\n                text: `\n          Hei ${firstName || name}\n          \n          Takk for din henvendelse til Hepta. Vi har mottatt meldingen din og vil ta kontakt så snart som mulig.\n          \n          Med vennlig hilsen,\n          Hepta AS\n        `,\n                html: `\n          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n            <p>Hei ${firstName || name}!</p>\n            <p>Takk for din henvendelse til Hepta. Vi har mottatt meldingen din og vil ta kontakt så snart som mulig.</p>\n            <p>Med vennlig hilsen,<br>Hepta AS</p>\n          </div>\n        `,\n                headers: {\n                    \"X-Priority\": \"3\",\n                    \"Importance\": \"Normal\"\n                }\n            });\n            console.log(\"API: Auto-reply sent successfully\");\n        } catch (autoReplyError) {\n            // Don't fail if auto-reply fails\n            console.error(\"API: Auto-reply failed, but main email was sent:\", autoReplyError);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            messageId: info.messageId,\n            message: \"Kontaktskjema mottatt og e-post sendt\"\n        });\n    } catch (emailError) {\n        console.error(\"API: Error sending email:\", emailError);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Kunne ikke sende e-post\",\n            details: String(emailError),\n            success: false\n        }, {\n            status: 500\n        });\n    }\n}\n// Also handle OPTIONS requests for CORS preflight\nasync function OPTIONS() {\n    return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(null, {\n        status: 200,\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"POST, OPTIONS\",\n            \"Access-Control-Allow-Headers\": \"Content-Type\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/contact/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/nodemailer"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcontact%2Froute&page=%2Fapi%2Fcontact%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontact%2Froute.ts&appDir=%2FUsers%2Falexanderamundsen%2FWebstormProjects%2Fwasd%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Falexanderamundsen%2FWebstormProjects%2Fwasd&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();