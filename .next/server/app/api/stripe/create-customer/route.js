(()=>{var e={};e.id=7179,e.ids=[7179],e.modules={52213:e=>{function t(e){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=52213,e.exports=t},72934:e=>{"use strict";e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{"use strict";e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{"use strict";e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{"use strict";e.exports=require("buffer")},32081:e=>{"use strict";e.exports=require("child_process")},6113:e=>{"use strict";e.exports=require("crypto")},82361:e=>{"use strict";e.exports=require("events")},13685:e=>{"use strict";e.exports=require("http")},95687:e=>{"use strict";e.exports=require("https")},41808:e=>{"use strict";e.exports=require("net")},85477:e=>{"use strict";e.exports=require("punycode")},12781:e=>{"use strict";e.exports=require("stream")},24404:e=>{"use strict";e.exports=require("tls")},57310:e=>{"use strict";e.exports=require("url")},73837:e=>{"use strict";e.exports=require("util")},59796:e=>{"use strict";e.exports=require("zlib")},58359:()=>{},93739:()=>{},8217:(e,t,r)=>{"use strict";r.r(t),r.d(t,{headerHooks:()=>S,originalPathname:()=>h,patchFetch:()=>E,requestAsyncStorage:()=>d,routeModule:()=>m,serverHooks:()=>_,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>I});var i={};r.r(i),r.d(i,{POST:()=>p});var s=r(95419),o=r(69108),n=r(99678),a=r(78070),c=r(8234),l=r(80782),u=r(15922);async function p(e){try{let t=(0,c.e)(),r=e.headers.get("authorization"),i=r&&r.startsWith("Bearer test_");console.log("Create customer API called. Auth header:",r?"Present":"Missing","Test session:",i?"Yes":"No");let{data:{session:s}}=await t.auth.getSession();if(!s&&i)return console.log("Using test user for customer creation"),a.Z.json({customerId:"cus_test_123456789"});if(!s&&!i)return console.log("No valid session found for customer creation"),a.Z.json({error:"Unauthorized - No valid session found"},{status:401});let o=s?.user,{data:n,error:l}=await t.from("profiles").select("stripe_customer_id").eq("id",o?.id||"test-user-id").single();if(l&&"PGRST116"!==l.code)throw console.error("Error fetching profile:",l),l;if(n?.stripe_customer_id)return console.log(`User already has customer ID: ${n.stripe_customer_id}`),a.Z.json({customerId:n.stripe_customer_id});let p=await (0,u.wK)(o?.email||"test@example.com",o?.user_metadata?.full_name||"Test User");console.log(`Created new customer with ID: ${p.id}`);let{error:m}=await t.from("profiles").upsert({id:o?.id||"test-user-id",stripe_customer_id:p.id,updated_at:new Date().toISOString()});if(m)throw console.error("Error saving customer ID to profile:",m),m;return a.Z.json({customerId:p.id})}catch(e){return console.error("Error creating Stripe customer:",e),a.Z.json({error:`Failed to create Stripe customer: ${e instanceof Error?e.message:String(e)}`},{status:500})}}new l.Z(process.env.STRIPE_SECRET_KEY);let m=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/stripe/create-customer/route",pathname:"/api/stripe/create-customer",filename:"route",bundlePath:"app/api/stripe/create-customer/route"},resolvedPagePath:"/Users/alexanderamundsen/hepta/hepta-3/app/api/stripe/create-customer/route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:d,staticGenerationAsyncStorage:g,serverHooks:_,headerHooks:S,staticGenerationBailout:I}=m,h="/api/stripe/create-customer/route";function E(){return(0,n.patchFetch)({serverHooks:_,staticGenerationAsyncStorage:g})}},15922:(e,t,r)=>{"use strict";r.d(t,{Ce:()=>u,Gl:()=>c,Z$:()=>l,a7:()=>p,wK:()=>a,zu:()=>m});var i=r(80782);let s=(()=>{let e=process.env.STRIPE_SECRET_KEY;if(console.log("\n--- DEBUG: lib/stripe.ts -> getStripeInstance ---"),console.log("NODE_ENV:","production"),console.log("Raw STRIPE_SECRET_KEY from env:",e),!e)return console.warn("⚠️ lib/stripe.ts: STRIPE_SECRET_KEY is NOT SET in environment variables. Stripe operations will be mocked or fail."),null;if(e.startsWith("sk_live_"))console.warn("\uD83D\uDD34 lib/stripe.ts: WARNING: Attempting to use a LIVE Stripe key (sk_live_).");else if(e.startsWith("sk_test_"))console.log("✅ lib/stripe.ts: Using a TEST Stripe key (sk_test_). This is good for development.");else{let t=e.length>14?e.substring(0,7)+"..."+e.substring(e.length-4):e;return console.warn(`⚠️ lib/stripe.ts: STRIPE_SECRET_KEY ("${t}") does not look like a valid Stripe secret key (should start with sk_test_ or sk_live_).`),null}try{let t=e.length>14?e.substring(0,7)+"..."+e.substring(e.length-4):e;console.log(`lib/stripe.ts: Attempting to initialize Stripe with API key: ${t}`);let r=new i.Z(e,{apiVersion:"2023-10-16",typescript:!0});return console.log("✅ lib/stripe.ts: Stripe initialized successfully."),r}catch(e){return console.error("❌ lib/stripe.ts: Failed to initialize Stripe with API key. Error:",e),null}})(),o=(e,...t)=>{},n=e=>Math.round(100*e),a=async(e,t,r)=>{if(o("createCustomer - Start",{email:e,name:t,metadata:r}),console.log("--- DEBUG: lib/stripe.ts -> createCustomer ---"),console.log("Is 'stripe' object initialized here?",s?"YES":"NO - Stripe key likely missing/invalid in env!"),!s)return console.warn("⚠️ lib/stripe.ts: Stripe instance is null in createCustomer. Returning MOCK customer."),{id:"cus_mock_STRIPE_NULL_"+Date.now().toString(36)+Math.random().toString(36).substring(2),email:e,name:t,metadata:r,object:"customer",created:Math.floor(Date.now()/1e3),error:!0,message:"Stripe not initialized (null instance), returning mock customer."};try{console.log(`lib/stripe.ts: Attempting REAL Stripe API call: customers.create for email: ${e}`);let i={email:e};t&&(i.name=t),r&&(i.metadata=r);let o=await s.customers.create(i);return console.log("✅ lib/stripe.ts: Stripe customer created successfully via API. ID:",o.id),o}catch(i){return console.error("❌ lib/stripe.ts: Error calling Stripe API (customers.create):",i),{id:"cus_mock_API_ERROR_"+Date.now().toString(36)+Math.random().toString(36).substring(2),email:e,name:t,metadata:r,object:"customer",created:Math.floor(Date.now()/1e3),error:!0,message:i.message||"Unknown error during Stripe API call to create customer"}}},c=async(e,t="nok",r)=>{if(o("createPaymentIntent - Start",{amount:e,currency:t,customerId:r}),console.log("--- DEBUG: lib/stripe.ts -> createPaymentIntent ---"),console.log("Is 'stripe' object initialized here?",s?"YES":"NO - Stripe key likely missing/invalid in env!"),!s){console.warn("⚠️ lib/stripe.ts: Stripe instance is null in createPaymentIntent. Returning MOCK Payment Intent.");let i="pi_mock_secret_STRIPE_NULL_"+Date.now().toString(36)+Math.random().toString(36).substring(2);return{id:"pi_mock_STRIPE_NULL_"+Date.now().toString(36)+Math.random().toString(36).substring(2),amount:n(e),currency:t,client_secret:i,customer:r,status:"requires_payment_method",object:"payment_intent",error:!0,message:"Stripe not initialized (null instance), returning mock payment intent."}}try{console.log(`lib/stripe.ts: Attempting REAL Stripe API call: paymentIntents.create. Amount: ${e}, Currency: ${t}, CustomerID: ${r||"None"}`);let i={amount:n(e),currency:t,automatic_payment_methods:{enabled:!0}};r&&(i.customer=r);let o=await s.paymentIntents.create(i);return console.log("✅ lib/stripe.ts: REAL Stripe Payment Intent created. Client Secret starts with:",o.client_secret?.substring(0,15)+"..."),o}catch(s){console.error("❌ lib/stripe.ts: Error calling Stripe API (paymentIntents.create):",s);let i="pi_mock_secret_API_ERROR_"+Date.now().toString(36)+Math.random().toString(36).substring(2);return{id:"pi_mock_API_ERROR_"+Date.now().toString(36)+Math.random().toString(36).substring(2),amount:n(e),currency:t,client_secret:i,customer:r,status:"requires_payment_method",object:"payment_intent",error:!0,message:s.message||"Unknown error during Stripe API call to create payment intent"}}},l=async(e,t,r,i="nok")=>{if(o("createInvoice - Start",{customerId:e,description:t,amount:r,currency:i}),console.log("--- DEBUG: lib/stripe.ts -> createInvoice --- 'stripe' initialized?",s?"YES":"NO"),!s)return console.warn("⚠️ lib/stripe.ts: Stripe instance is null in createInvoice. Returning MOCK invoice."),{id:"in_mock_STRIPE_NULL_"+Date.now().toString(36),customer:e,amount_due:n(r),currency:i,description:t,status:"open",due_date:Math.floor(Date.now()/1e3)+2592e3,created:Math.floor(Date.now()/1e3),error:!0,message:"Stripe not initialized"};try{console.log(`lib/stripe.ts: Attempting REAL Stripe API call for createInvoice. Customer: ${e}`),await s.invoiceItems.create({customer:e,amount:n(r),currency:i,description:t});let o=await s.invoices.create({customer:e,auto_advance:!0,collection_method:"send_invoice",days_until_due:30}),a=await s.invoices.finalizeInvoice(o.id);return await s.invoices.sendInvoice(a.id),console.log("✅ lib/stripe.ts: REAL Stripe Invoice created and sent. ID:",a.id),a}catch(s){return console.error("❌ lib/stripe.ts: Error creating REAL Stripe invoice:",s),{id:"in_mock_API_ERROR_"+Date.now().toString(36),customer:e,amount_due:n(r),currency:i,description:t,status:"open",due_date:Math.floor(Date.now()/1e3)+2592e3,created:Math.floor(Date.now()/1e3),error:!0,message:s.message||"Unknown API error creating invoice"}}},u=async e=>{if(o("getCustomerInvoices - Start",{customerId:e}),console.log("--- DEBUG: lib/stripe.ts -> getCustomerInvoices --- 'stripe' initialized?",s?"YES":"NO"),!s)return console.warn("⚠️ lib/stripe.ts: Stripe instance is null in getCustomerInvoices. Returning MOCK invoices."),[{id:"in_mock_STRIPE_NULL_cust_inv",customer:e,amount_due:1e4,currency:"nok",status:"open",due_date:Math.floor(Date.now()/1e3)+2592e3,hosted_invoice_url:"#",created:Math.floor(Date.now()/1e3)-86400,error:!0,message:"Stripe not initialized"}];try{console.log(`lib/stripe.ts: Attempting REAL Stripe API call for getCustomerInvoices. Customer: ${e}`);let t=await s.invoices.list({customer:e,limit:100});return console.log(`✅ lib/stripe.ts: Fetched ${t.data.length} REAL Stripe Invoices for customer.`),t.data}catch(t){return console.error("❌ lib/stripe.ts: Error fetching REAL customer invoices:",t),[{id:"in_mock_API_ERROR_cust_inv",customer:e,amount_due:1e4,currency:"nok",status:"open",due_date:Math.floor(Date.now()/1e3)+2592e3,hosted_invoice_url:"#",created:Math.floor(Date.now()/1e3)-86400,error:!0,message:t.message||"Unknown API error fetching invoices"}]}},p=async e=>{if(o("payInvoice - Start",{invoiceId:e}),console.log("--- DEBUG: lib/stripe.ts -> payInvoice --- 'stripe' initialized?",s?"YES":"NO"),!s)return console.warn("⚠️ lib/stripe.ts: Stripe instance is null in payInvoice. Returning MOCK payment status."),{id:e,status:"paid",paid:!0,amount_paid:1e4,currency:"nok",error:!0,message:"Stripe not initialized"};try{console.log(`lib/stripe.ts: Attempting REAL Stripe API call for payInvoice. Invoice ID: ${e}`);let t=await s.invoices.pay(e);return console.log("✅ lib/stripe.ts: REAL Stripe Invoice paid. Status:",t.status),t}catch(t){return console.error("❌ lib/stripe.ts: Error paying REAL Stripe invoice:",t),{id:e,status:"open",paid:!1,error:!0,message:t.message||"Unknown API error paying invoice"}}},m=async e=>{throw o("createTestInvoice - Start",{customerId:e}),console.log("--- DEBUG: lib/stripe.ts -> createTestInvoice --- 'stripe' initialized?",s?"YES":"NO"),console.error("❌ lib/stripe.ts: createTestInvoice called outside development mode."),Error("Test invoices can only be created in development mode")}},8234:(e,t,r)=>{"use strict";r.d(t,{e:()=>o});var i=r(76456),s=r(32455);let o=()=>{let e=(0,s.cookies)();return(0,i.lx)("https://pwcibfnmmndbdwxdjmdj.supabase.co/","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB3Y2liZm5tbW5kYmR3eGRqbWRqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEwMDUxMTYsImV4cCI6MjA1NjU4MTExNn0.r7yjNeA4AWA2dd1y4MmS_unB7ERpSKNjWxNKHRGo6zU",{cookies:{get:t=>e.get(t)?.value,set(t,r,i){try{e.set({name:t,value:r,...i})}catch(e){}},remove(t,r){try{e.delete({name:t,...r})}catch(e){}}}})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),i=t.X(0,[1638,6206,2455,6456,782],()=>r(8217));module.exports=i})();