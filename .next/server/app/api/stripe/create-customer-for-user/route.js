"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/stripe/create-customer-for-user/route";
exports.ids = ["app/api/stripe/create-customer-for-user/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstripe%2Fcreate-customer-for-user%2Froute&page=%2Fapi%2Fstripe%2Fcreate-customer-for-user%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstripe%2Fcreate-customer-for-user%2Froute.ts&appDir=%2Fhome%2Fruben%2Fcode%2Fhepta%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fruben%2Fcode%2Fhepta&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstripe%2Fcreate-customer-for-user%2Froute&page=%2Fapi%2Fstripe%2Fcreate-customer-for-user%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstripe%2Fcreate-customer-for-user%2Froute.ts&appDir=%2Fhome%2Fruben%2Fcode%2Fhepta%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fruben%2Fcode%2Fhepta&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _home_ruben_code_hepta_app_api_stripe_create_customer_for_user_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/stripe/create-customer-for-user/route.ts */ \"(rsc)/./app/api/stripe/create-customer-for-user/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/stripe/create-customer-for-user/route\",\n        pathname: \"/api/stripe/create-customer-for-user\",\n        filename: \"route\",\n        bundlePath: \"app/api/stripe/create-customer-for-user/route\"\n    },\n    resolvedPagePath: \"/home/ruben/code/hepta/app/api/stripe/create-customer-for-user/route.ts\",\n    nextConfigOutput,\n    userland: _home_ruben_code_hepta_app_api_stripe_create_customer_for_user_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/stripe/create-customer-for-user/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzdHJpcGUlMkZjcmVhdGUtY3VzdG9tZXItZm9yLXVzZXIlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnN0cmlwZSUyRmNyZWF0ZS1jdXN0b21lci1mb3ItdXNlciUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnN0cmlwZSUyRmNyZWF0ZS1jdXN0b21lci1mb3ItdXNlciUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGcnViZW4lMkZjb2RlJTJGaGVwdGElMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRmhvbWUlMkZydWJlbiUyRmNvZGUlMkZoZXB0YSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDdUI7QUFDcEc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZXB0YS1kYXNoYm9hcmQvPzFhMzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL2hvbWUvcnViZW4vY29kZS9oZXB0YS9hcHAvYXBpL3N0cmlwZS9jcmVhdGUtY3VzdG9tZXItZm9yLXVzZXIvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3N0cmlwZS9jcmVhdGUtY3VzdG9tZXItZm9yLXVzZXIvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zdHJpcGUvY3JlYXRlLWN1c3RvbWVyLWZvci11c2VyXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9zdHJpcGUvY3JlYXRlLWN1c3RvbWVyLWZvci11c2VyL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL2hvbWUvcnViZW4vY29kZS9oZXB0YS9hcHAvYXBpL3N0cmlwZS9jcmVhdGUtY3VzdG9tZXItZm9yLXVzZXIvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3N0cmlwZS9jcmVhdGUtY3VzdG9tZXItZm9yLXVzZXIvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstripe%2Fcreate-customer-for-user%2Froute&page=%2Fapi%2Fstripe%2Fcreate-customer-for-user%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstripe%2Fcreate-customer-for-user%2Froute.ts&appDir=%2Fhome%2Fruben%2Fcode%2Fhepta%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fruben%2Fcode%2Fhepta&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/stripe/create-customer-for-user/route.ts":
/*!**********************************************************!*\
  !*** ./app/api/stripe/create-customer-for-user/route.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/auth-helpers-nextjs */ \"(rsc)/./node_modules/@supabase/auth-helpers-nextjs/dist/index.js\");\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var _lib_stripe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/stripe */ \"(rsc)/./lib/stripe.ts\");\n\n\n\n\nasync function POST(req) {\n    try {\n        const { userId, email, name } = await req.json();\n        if (!userId || !email) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User ID and email are required\"\n            }, {\n                status: 400\n            });\n        }\n        const supabase = (0,_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_1__.createRouteHandlerClient)({\n            cookies: next_headers__WEBPACK_IMPORTED_MODULE_2__.cookies\n        });\n        // Check if the user already has a customer ID\n        const { data: profile, error: profileError } = await supabase.from(\"profiles\").select(\"stripe_customer_id\").eq(\"id\", userId).single();\n        if (profileError && profileError.code !== \"PGRST116\") {\n            console.error(\"Error fetching profile:\", profileError);\n            throw profileError;\n        }\n        // If the user already has a customer ID, return it\n        if (profile?.stripe_customer_id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                customerId: profile.stripe_customer_id\n            });\n        }\n        // Create a new Stripe customer\n        const customer = await (0,_lib_stripe__WEBPACK_IMPORTED_MODULE_3__.createCustomer)(email, name);\n        // Save the customer ID to the user's profile\n        const { error: updateError } = await supabase.from(\"profiles\").upsert({\n            id: userId,\n            stripe_customer_id: customer.id,\n            updated_at: new Date().toISOString()\n        });\n        if (updateError) {\n            console.error(\"Error saving customer ID to profile:\", updateError);\n            throw updateError;\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            customerId: customer.id\n        });\n    } catch (error) {\n        console.error(\"Error creating Stripe customer:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: `Failed to create Stripe customer: ${error instanceof Error ? error.message : String(error)}`\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3N0cmlwZS9jcmVhdGUtY3VzdG9tZXItZm9yLXVzZXIvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBDO0FBQzhCO0FBQ2xDO0FBQ087QUFFdEMsZUFBZUksS0FBS0MsR0FBWTtJQUNyQyxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLEtBQUssRUFBRUMsSUFBSSxFQUFFLEdBQUcsTUFBTUgsSUFBSUksSUFBSTtRQUU5QyxJQUFJLENBQUNILFVBQVUsQ0FBQ0MsT0FBTztZQUNyQixPQUFPUCxxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO2dCQUFFQyxPQUFPO1lBQWlDLEdBQUc7Z0JBQUVDLFFBQVE7WUFBSTtRQUN0RjtRQUVBLE1BQU1DLFdBQVdYLHVGQUF3QkEsQ0FBQztZQUFFQyxPQUFPQSxtREFBQUE7UUFBQztRQUVwRCw4Q0FBOEM7UUFDOUMsTUFBTSxFQUFFVyxNQUFNQyxPQUFPLEVBQUVKLE9BQU9LLFlBQVksRUFBRSxHQUFHLE1BQU1ILFNBQ2xESSxJQUFJLENBQUMsWUFDTEMsTUFBTSxDQUFDLHNCQUNQQyxFQUFFLENBQUMsTUFBTVosUUFDVGEsTUFBTTtRQUVULElBQUlKLGdCQUFnQkEsYUFBYUssSUFBSSxLQUFLLFlBQVk7WUFDcERDLFFBQVFYLEtBQUssQ0FBQywyQkFBMkJLO1lBQ3pDLE1BQU1BO1FBQ1I7UUFFQSxtREFBbUQ7UUFDbkQsSUFBSUQsU0FBU1Esb0JBQW9CO1lBQy9CLE9BQU90QixxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO2dCQUFFYyxZQUFZVCxRQUFRUSxrQkFBa0I7WUFBQztRQUNwRTtRQUVBLCtCQUErQjtRQUMvQixNQUFNRSxXQUFXLE1BQU1yQiwyREFBY0EsQ0FBQ0ksT0FBT0M7UUFFN0MsNkNBQTZDO1FBQzdDLE1BQU0sRUFBRUUsT0FBT2UsV0FBVyxFQUFFLEdBQUcsTUFBTWIsU0FBU0ksSUFBSSxDQUFDLFlBQVlVLE1BQU0sQ0FBQztZQUNwRUMsSUFBSXJCO1lBQ0pnQixvQkFBb0JFLFNBQVNHLEVBQUU7WUFDL0JDLFlBQVksSUFBSUMsT0FBT0MsV0FBVztRQUNwQztRQUVBLElBQUlMLGFBQWE7WUFDZkosUUFBUVgsS0FBSyxDQUFDLHdDQUF3Q2U7WUFDdEQsTUFBTUE7UUFDUjtRQUVBLE9BQU96QixxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO1lBQUVjLFlBQVlDLFNBQVNHLEVBQUU7UUFBQztJQUNyRCxFQUFFLE9BQU9qQixPQUFPO1FBQ2RXLFFBQVFYLEtBQUssQ0FBQyxtQ0FBbUNBO1FBQ2pELE9BQU9WLHFEQUFZQSxDQUFDUyxJQUFJLENBQ3RCO1lBQUVDLE9BQU8sQ0FBQyxrQ0FBa0MsRUFBRUEsaUJBQWlCcUIsUUFBUXJCLE1BQU1zQixPQUFPLEdBQUdDLE9BQU92QixPQUFPLENBQUM7UUFBQyxHQUN2RztZQUFFQyxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlcHRhLWRhc2hib2FyZC8uL2FwcC9hcGkvc3RyaXBlL2NyZWF0ZS1jdXN0b21lci1mb3ItdXNlci9yb3V0ZS50cz80MzIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiXG5pbXBvcnQgeyBjcmVhdGVSb3V0ZUhhbmRsZXJDbGllbnQgfSBmcm9tIFwiQHN1cGFiYXNlL2F1dGgtaGVscGVycy1uZXh0anNcIlxuaW1wb3J0IHsgY29va2llcyB9IGZyb20gXCJuZXh0L2hlYWRlcnNcIlxuaW1wb3J0IHsgY3JlYXRlQ3VzdG9tZXIgfSBmcm9tIFwiQC9saWIvc3RyaXBlXCJcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxOiBSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyB1c2VySWQsIGVtYWlsLCBuYW1lIH0gPSBhd2FpdCByZXEuanNvbigpXG5cbiAgICBpZiAoIXVzZXJJZCB8fCAhZW1haWwpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBcIlVzZXIgSUQgYW5kIGVtYWlsIGFyZSByZXF1aXJlZFwiIH0sIHsgc3RhdHVzOiA0MDAgfSlcbiAgICB9XG5cbiAgICBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZVJvdXRlSGFuZGxlckNsaWVudCh7IGNvb2tpZXMgfSlcblxuICAgIC8vIENoZWNrIGlmIHRoZSB1c2VyIGFscmVhZHkgaGFzIGEgY3VzdG9tZXIgSURcbiAgICBjb25zdCB7IGRhdGE6IHByb2ZpbGUsIGVycm9yOiBwcm9maWxlRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbShcInByb2ZpbGVzXCIpXG4gICAgICAuc2VsZWN0KFwic3RyaXBlX2N1c3RvbWVyX2lkXCIpXG4gICAgICAuZXEoXCJpZFwiLCB1c2VySWQpXG4gICAgICAuc2luZ2xlKClcblxuICAgIGlmIChwcm9maWxlRXJyb3IgJiYgcHJvZmlsZUVycm9yLmNvZGUgIT09IFwiUEdSU1QxMTZcIikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIHByb2ZpbGU6XCIsIHByb2ZpbGVFcnJvcilcbiAgICAgIHRocm93IHByb2ZpbGVFcnJvclxuICAgIH1cblxuICAgIC8vIElmIHRoZSB1c2VyIGFscmVhZHkgaGFzIGEgY3VzdG9tZXIgSUQsIHJldHVybiBpdFxuICAgIGlmIChwcm9maWxlPy5zdHJpcGVfY3VzdG9tZXJfaWQpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGN1c3RvbWVySWQ6IHByb2ZpbGUuc3RyaXBlX2N1c3RvbWVyX2lkIH0pXG4gICAgfVxuXG4gICAgLy8gQ3JlYXRlIGEgbmV3IFN0cmlwZSBjdXN0b21lclxuICAgIGNvbnN0IGN1c3RvbWVyID0gYXdhaXQgY3JlYXRlQ3VzdG9tZXIoZW1haWwsIG5hbWUpXG5cbiAgICAvLyBTYXZlIHRoZSBjdXN0b21lciBJRCB0byB0aGUgdXNlcidzIHByb2ZpbGVcbiAgICBjb25zdCB7IGVycm9yOiB1cGRhdGVFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuZnJvbShcInByb2ZpbGVzXCIpLnVwc2VydCh7XG4gICAgICBpZDogdXNlcklkLFxuICAgICAgc3RyaXBlX2N1c3RvbWVyX2lkOiBjdXN0b21lci5pZCxcbiAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICB9KVxuXG4gICAgaWYgKHVwZGF0ZUVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igc2F2aW5nIGN1c3RvbWVyIElEIHRvIHByb2ZpbGU6XCIsIHVwZGF0ZUVycm9yKVxuICAgICAgdGhyb3cgdXBkYXRlRXJyb3JcbiAgICB9XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBjdXN0b21lcklkOiBjdXN0b21lci5pZCB9KVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBjcmVhdGluZyBTdHJpcGUgY3VzdG9tZXI6XCIsIGVycm9yKVxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgZXJyb3I6IGBGYWlsZWQgdG8gY3JlYXRlIFN0cmlwZSBjdXN0b21lcjogJHtlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFN0cmluZyhlcnJvcil9YCB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9LFxuICAgIClcbiAgfVxufVxuXG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiY3JlYXRlUm91dGVIYW5kbGVyQ2xpZW50IiwiY29va2llcyIsImNyZWF0ZUN1c3RvbWVyIiwiUE9TVCIsInJlcSIsInVzZXJJZCIsImVtYWlsIiwibmFtZSIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsInN1cGFiYXNlIiwiZGF0YSIsInByb2ZpbGUiLCJwcm9maWxlRXJyb3IiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJzaW5nbGUiLCJjb2RlIiwiY29uc29sZSIsInN0cmlwZV9jdXN0b21lcl9pZCIsImN1c3RvbWVySWQiLCJjdXN0b21lciIsInVwZGF0ZUVycm9yIiwidXBzZXJ0IiwiaWQiLCJ1cGRhdGVkX2F0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiRXJyb3IiLCJtZXNzYWdlIiwiU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/stripe/create-customer-for-user/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/stripe.ts":
/*!***********************!*\
  !*** ./lib/stripe.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCustomer: () => (/* binding */ createCustomer),\n/* harmony export */   createInvoice: () => (/* binding */ createInvoice),\n/* harmony export */   createPaymentIntent: () => (/* binding */ createPaymentIntent),\n/* harmony export */   createTestInvoice: () => (/* binding */ createTestInvoice),\n/* harmony export */   formatAmountForStripe: () => (/* binding */ formatAmountForStripe),\n/* harmony export */   formatAmountFromStripe: () => (/* binding */ formatAmountFromStripe),\n/* harmony export */   getCustomerInvoices: () => (/* binding */ getCustomerInvoices),\n/* harmony export */   payInvoice: () => (/* binding */ payInvoice),\n/* harmony export */   stripe: () => (/* binding */ stripe)\n/* harmony export */ });\n/* harmony import */ var stripe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stripe */ \"(rsc)/./node_modules/stripe/esm/stripe.esm.node.js\");\n\n// Check if we're in development mode\nconst isDevelopment = \"development\" === \"development\";\n// Initialize Stripe with the provided secret key\n// Use a test key for development and handle missing keys gracefully\nconst getStripeInstance = ()=>{\n    const apiKey = \"sk_test_51NTj6ECBZbubqLlTavZEEYr8YqLtMwVYfzIY8EyT3kXY2yuSv6z7hsiQ2omjZnQ1TMIFee3emq7HIcMAe4rWdAoc00CZhpLtEf\" || 0;\n    if (!apiKey) {\n        console.warn(\"⚠️ No Stripe API key found. Using mock data for Stripe operations.\");\n        return null;\n    }\n    // Check if we're trying to use a live key in development\n    if (isDevelopment && apiKey.startsWith(\"sk_live_\")) {\n        console.warn(\"⚠️ Using a live Stripe key in development environment. Consider using a test key instead.\");\n    }\n    try {\n        return new stripe__WEBPACK_IMPORTED_MODULE_0__[\"default\"](apiKey, {\n            apiVersion: \"2023-10-16\"\n        });\n    } catch (error) {\n        console.error(\"Failed to initialize Stripe:\", error);\n        return null;\n    }\n};\nconst stripe = getStripeInstance();\n// Log Stripe operations in development mode\nconst logStripeOperation = (operation, ...args)=>{\n    if (isDevelopment) {\n        console.log(`🔄 Stripe ${operation}:`, ...args);\n    }\n};\n// Helper function to format amount for Stripe (converts NOK to øre)\nconst formatAmountForStripe = (amount)=>{\n    return Math.round(amount * 100);\n};\n// Helper function to format amount from Stripe (converts øre to NOK)\nconst formatAmountFromStripe = (amount)=>{\n    return amount / 100;\n};\n// Create a Stripe customer\nconst createCustomer = async (email, name)=>{\n    try {\n        logStripeOperation(\"createCustomer\", {\n            email,\n            name\n        });\n        // In development mode, use test mode\n        if (isDevelopment) {\n            console.log(\"⚠️ Using test mode for Stripe operations\");\n            // In development, we can mock the customer creation\n            return {\n                id: \"cus_test_\" + Math.random().toString(36).substring(2, 10),\n                email,\n                name,\n                created: Math.floor(Date.now() / 1000)\n            };\n        }\n        if (!stripe) {\n            return {\n                id: \"cus_mock_\" + Math.random().toString(36).substring(2, 10),\n                email,\n                name,\n                created: Math.floor(Date.now() / 1000)\n            };\n        }\n        const customer = await stripe.customers.create({\n            email,\n            name\n        });\n        return customer;\n    } catch (error) {\n        console.error(\"Error creating Stripe customer:\", error);\n        // Return a mock customer in case of error\n        return {\n            id: \"cus_mock_error_\" + Math.random().toString(36).substring(2, 10),\n            email,\n            name,\n            created: Math.floor(Date.now() / 1000)\n        };\n    }\n};\n// Create a Stripe invoice\nconst createInvoice = async (customerId, description, amount, currency = \"nok\")=>{\n    try {\n        logStripeOperation(\"createInvoice\", {\n            customerId,\n            description,\n            amount,\n            currency\n        });\n        // In development mode or if Stripe is not initialized, mock the invoice creation\n        if (isDevelopment || !stripe) {\n            return {\n                id: \"in_test_\" + Math.random().toString(36).substring(2, 10),\n                customer: customerId,\n                amount_due: formatAmountForStripe(amount),\n                currency,\n                description,\n                status: \"open\",\n                due_date: Math.floor(Date.now() / 1000) + 86400 * 30,\n                created: Math.floor(Date.now() / 1000)\n            };\n        }\n        // Create an invoice item\n        const invoiceItem = await stripe.invoiceItems.create({\n            customer: customerId,\n            amount: formatAmountForStripe(amount),\n            currency,\n            description\n        });\n        // Create an invoice from the invoice item\n        const invoice = await stripe.invoices.create({\n            customer: customerId,\n            auto_advance: true,\n            collection_method: \"send_invoice\",\n            days_until_due: 30\n        });\n        // Finalize the invoice\n        const finalizedInvoice = await stripe.invoices.finalizeInvoice(invoice.id);\n        // Send the invoice\n        await stripe.invoices.sendInvoice(finalizedInvoice.id);\n        return finalizedInvoice;\n    } catch (error) {\n        console.error(\"Error creating Stripe invoice:\", error);\n        // Return a mock invoice in case of error\n        return {\n            id: \"in_mock_error_\" + Math.random().toString(36).substring(2, 10),\n            customer: customerId,\n            amount_due: formatAmountForStripe(amount),\n            currency,\n            description,\n            status: \"open\",\n            due_date: Math.floor(Date.now() / 1000) + 86400 * 30,\n            created: Math.floor(Date.now() / 1000)\n        };\n    }\n};\n// Get all invoices for a customer\nconst getCustomerInvoices = async (customerId)=>{\n    try {\n        logStripeOperation(\"getCustomerInvoices\", {\n            customerId\n        });\n        // If Stripe is not initialized or we're in development, return mock data\n        if (!stripe || isDevelopment) {\n            console.log(\"⚠️ Using mock data for customer invoices\");\n            return [\n                {\n                    id: \"in_mock_1\",\n                    number: \"MOCK001\",\n                    amount_due: 10000,\n                    currency: \"nok\",\n                    status: \"open\",\n                    due_date: Math.floor(Date.now() / 1000) + 86400 * 30,\n                    hosted_invoice_url: \"#\",\n                    created: Math.floor(Date.now() / 1000) - 86400\n                },\n                {\n                    id: \"in_mock_2\",\n                    number: \"MOCK002\",\n                    amount_due: 25000,\n                    currency: \"nok\",\n                    status: \"paid\",\n                    due_date: Math.floor(Date.now() / 1000) + 86400 * 15,\n                    hosted_invoice_url: \"#\",\n                    created: Math.floor(Date.now() / 1000) - 86400 * 7\n                }\n            ];\n        }\n        // Use real Stripe API calls\n        const invoices = await stripe.invoices.list({\n            customer: customerId,\n            limit: 100\n        });\n        return invoices.data;\n    } catch (error) {\n        console.error(\"Error fetching customer invoices:\", error);\n        // Return mock data in case of error\n        return [\n            {\n                id: \"in_mock_error_1\",\n                number: \"ERROR001\",\n                amount_due: 10000,\n                currency: \"nok\",\n                status: \"open\",\n                due_date: Math.floor(Date.now() / 1000) + 86400 * 30,\n                hosted_invoice_url: \"#\",\n                created: Math.floor(Date.now() / 1000) - 86400\n            }\n        ];\n    }\n};\n// Create a payment intent\nconst createPaymentIntent = async (amount, currency = \"nok\", customerId)=>{\n    try {\n        logStripeOperation(\"createPaymentIntent\", {\n            amount,\n            currency,\n            customerId\n        });\n        // In development mode or if Stripe is not initialized, mock the payment intent\n        if (isDevelopment || !stripe) {\n            return {\n                id: \"pi_test_\" + Math.random().toString(36).substring(2, 10),\n                amount: formatAmountForStripe(amount),\n                currency,\n                client_secret: \"pi_test_secret_\" + Math.random().toString(36).substring(2, 15),\n                customer: customerId\n            };\n        }\n        const paymentIntentParams = {\n            amount: formatAmountForStripe(amount),\n            currency,\n            automatic_payment_methods: {\n                enabled: true\n            }\n        };\n        if (customerId) {\n            paymentIntentParams.customer = customerId;\n        }\n        const paymentIntent = await stripe.paymentIntents.create(paymentIntentParams);\n        return paymentIntent;\n    } catch (error) {\n        console.error(\"Error creating payment intent:\", error);\n        // Return a mock payment intent in case of error\n        return {\n            id: \"pi_mock_error_\" + Math.random().toString(36).substring(2, 10),\n            amount: formatAmountForStripe(amount),\n            currency,\n            client_secret: \"pi_mock_error_secret_\" + Math.random().toString(36).substring(2, 15),\n            customer: customerId\n        };\n    }\n};\n// Pay an invoice\nconst payInvoice = async (invoiceId)=>{\n    try {\n        logStripeOperation(\"payInvoice\", {\n            invoiceId\n        });\n        // In development mode or if Stripe is not initialized, mock the invoice payment\n        if (isDevelopment || !stripe) {\n            return {\n                id: invoiceId,\n                status: \"paid\",\n                paid: true,\n                amount_paid: 10000,\n                currency: \"nok\"\n            };\n        }\n        const invoice = await stripe.invoices.pay(invoiceId);\n        return invoice;\n    } catch (error) {\n        console.error(\"Error paying invoice:\", error);\n        // Return a mock paid invoice in case of error\n        return {\n            id: invoiceId,\n            status: \"paid\",\n            paid: true,\n            amount_paid: 10000,\n            currency: \"nok\"\n        };\n    }\n};\n// Create a test invoice (for development only)\nconst createTestInvoice = async (customerId)=>{\n    // Only allow this in development mode\n    if (!isDevelopment) {\n        throw new Error(\"Test invoices can only be created in development mode\");\n    }\n    if (!customerId) {\n        throw new Error(\"Customer ID is required to create a test invoice\");\n    }\n    try {\n        logStripeOperation(\"createTestInvoice\", {\n            customerId\n        });\n        // Generate a random amount between 100 and 1000 NOK\n        const amount = Math.floor(Math.random() * 900) + 100;\n        // In development mode or if Stripe is not initialized, return a mock invoice\n        if (isDevelopment || !stripe) {\n            return {\n                id: \"in_test_\" + Math.random().toString(36).substring(2, 10),\n                number: \"TEST\" + Math.floor(Math.random() * 10000),\n                customer: customerId,\n                amount_due: formatAmountForStripe(amount),\n                currency: \"nok\",\n                description: \"Test Invoice - Development Only\",\n                status: \"open\",\n                due_date: Math.floor(Date.now() / 1000) + 86400 * 30,\n                created: Math.floor(Date.now() / 1000)\n            };\n        }\n        // The code below will only run if isDevelopment is false, which won't happen due to the check at the beginning\n        // But we'll keep it for completeness\n        // Create an invoice item\n        const invoiceItem = await stripe.invoiceItems.create({\n            customer: customerId,\n            amount: formatAmountForStripe(amount),\n            currency: \"nok\",\n            description: \"Test Invoice - Development Only\"\n        });\n        logStripeOperation(\"invoiceItem created\", invoiceItem);\n        // Create an invoice from the invoice item\n        const invoice = await stripe.invoices.create({\n            customer: customerId,\n            auto_advance: true,\n            collection_method: \"send_invoice\",\n            days_until_due: 30\n        });\n        logStripeOperation(\"invoice created\", invoice);\n        // Finalize the invoice\n        const finalizedInvoice = await stripe.invoices.finalizeInvoice(invoice.id);\n        logStripeOperation(\"invoice finalized\", finalizedInvoice);\n        return finalizedInvoice;\n    } catch (error) {\n        console.error(\"Error creating test invoice:\", error);\n        // Return a mock invoice in case of error\n        return {\n            id: \"in_mock_error_\" + Math.random().toString(36).substring(2, 10),\n            number: \"ERROR\" + Math.floor(Math.random() * 10000),\n            customer: customerId,\n            amount_due: formatAmountForStripe(Math.floor(Math.random() * 900) + 100),\n            currency: \"nok\",\n            description: \"Test Invoice - Development Only\",\n            status: \"open\",\n            due_date: Math.floor(Date.now() / 1000) + 86400 * 30,\n            created: Math.floor(Date.now() / 1000)\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/stripe.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/set-cookie-parser","vendor-chunks/webidl-conversions","vendor-chunks/jose","vendor-chunks/stripe","vendor-chunks/qs","vendor-chunks/object-inspect","vendor-chunks/get-intrinsic","vendor-chunks/side-channel-list","vendor-chunks/side-channel-weakmap","vendor-chunks/has-symbols","vendor-chunks/function-bind","vendor-chunks/side-channel-map","vendor-chunks/side-channel","vendor-chunks/get-proto","vendor-chunks/call-bind-apply-helpers","vendor-chunks/dunder-proto","vendor-chunks/math-intrinsics","vendor-chunks/call-bound","vendor-chunks/es-errors","vendor-chunks/gopd","vendor-chunks/es-define-property","vendor-chunks/hasown","vendor-chunks/es-object-atoms"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstripe%2Fcreate-customer-for-user%2Froute&page=%2Fapi%2Fstripe%2Fcreate-customer-for-user%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstripe%2Fcreate-customer-for-user%2Froute.ts&appDir=%2Fhome%2Fruben%2Fcode%2Fhepta%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fruben%2Fcode%2Fhepta&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();