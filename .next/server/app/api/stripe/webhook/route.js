(()=>{var e={};e.id=2757,e.ids=[2757],e.modules={47495:e=>{function t(e){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=47495,e.exports=t},72934:e=>{"use strict";e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{"use strict";e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{"use strict";e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{"use strict";e.exports=require("buffer")},61282:e=>{"use strict";e.exports=require("child_process")},84770:e=>{"use strict";e.exports=require("crypto")},17702:e=>{"use strict";e.exports=require("events")},32615:e=>{"use strict";e.exports=require("http")},35240:e=>{"use strict";e.exports=require("https")},98216:e=>{"use strict";e.exports=require("net")},68621:e=>{"use strict";e.exports=require("punycode")},76162:e=>{"use strict";e.exports=require("stream")},82452:e=>{"use strict";e.exports=require("tls")},17360:e=>{"use strict";e.exports=require("url")},21764:e=>{"use strict";e.exports=require("util")},71568:e=>{"use strict";e.exports=require("zlib")},58359:()=>{},93739:()=>{},57812:(e,t,r)=>{"use strict";r.r(t),r.d(t,{originalPathname:()=>b,patchFetch:()=>v,requestAsyncStorage:()=>m,routeModule:()=>d,serverHooks:()=>_,staticGenerationAsyncStorage:()=>g});var o={};r.r(o),r.d(o,{POST:()=>p});var i=r(49303),s=r(88716),n=r(60670),a=r(87070),c=r(69206),l=r(20344),u=r(71615);async function p(e){let t;console.log("\uD83E\uDE9D POST /api/stripe/webhook ROUTE HANDLER INVOKED"),console.log("Method:",e.method),console.log("Incoming Headers:",JSON.stringify(Object.fromEntries(Array.from(e.headers).map(([e,t])=>[e,t])),null,2));let r=await e.text(),o=e.headers.get("stripe-signature");console.log("\uD83D\uDCC4 Raw Body received (first 500 chars):",r.substring(0,500)),console.log("\uD83D\uDD11 Signature Header value received:",o);let i="whsec_81bb8c2505b7b8af2511740588e6f59407c04246bbd196ad7fce2b43367fbe69";if(console.log("\uD83E\uDD2B Webhook Secret used from env:",i),!o)return console.error("❌ CRITICAL: Stripe-Signature header is missing or null in req.headers!"),a.NextResponse.json({error:"Stripe-Signature header missing"},{status:400});if(!i)return console.error("❌ CRITICAL: STRIPE_WEBHOOK_SECRET is not set in environment!"),a.NextResponse.json({error:"Webhook secret not configured on server"},{status:500});if(!r)return console.error("❌ CRITICAL: Request body is empty after req.text()!"),a.NextResponse.json({error:"Request body is empty"},{status:400});if(!c.Ag)return console.error("❌ CRITICAL: Stripe instance from '@/lib/stripe' is not initialized!"),a.NextResponse.json({error:"Stripe service unavailable"},{status:500});try{console.log("Attempting stripe.webhooks.constructEvent..."),t=c.Ag.webhooks.constructEvent(r,o,i),console.log("✅ Stripe Webhook Event Verified:",t.type,`ID: ${t.id}`)}catch(e){return console.error(`❌ Webhook signature verification failed: ${e.message}`,{errorName:e.name,errorMessage:e.message}),a.NextResponse.json({error:`Webhook Error: ${e.message}`},{status:400})}let s=(0,l.createRouteHandlerClient)({cookies:u.cookies});console.log(`🔄 Processing event type: ${t.type}`);try{switch(t.type){case"invoice.paid":let e=t.data.object;console.log(`  Processing invoice.paid for invoice ID: ${e.id}, Customer: ${e.customer}`);let{error:r}=await s.from("invoices").update({status:"paid",paid_at:new Date().toISOString()}).eq("stripe_invoice_id",e.id);r?console.error(`  ❌ Supabase error updating invoice ${e.id} to paid:`,r):console.log(`  ✅ Supabase: Invoice ${e.id} marked as paid.`);break;case"invoice.payment_failed":let o=t.data.object;console.log(`  Processing invoice.payment_failed for invoice ID: ${o.id}, Customer: ${o.customer}`);let{error:i}=await s.from("invoices").update({status:"payment_failed"}).eq("stripe_invoice_id",o.id);i?console.error(`  ❌ Supabase error updating invoice ${o.id} to payment_failed:`,i):console.log(`  ✅ Supabase: Invoice ${o.id} marked as payment_failed.`);break;case"customer.subscription.created":let n=t.data.object;console.log(`  Processing customer.subscription.created for subscription ID: ${n.id}, Customer: ${n.customer}`);break;default:console.log(`  🤷‍♀️ Unhandled event type: ${t.type}`)}}catch(e){console.error(`❌ Error during event handling for ${t.id} (type: ${t.type}): ${e.message}`,e)}return console.log(`👍 Event ${t.id} processed. Responding 200 to Stripe.`),a.NextResponse.json({received:!0})}console.log("\uD83E\uDE9D /api/stripe/webhook/route.ts file TOP LEVEL LOG");let d=new i.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/stripe/webhook/route",pathname:"/api/stripe/webhook",filename:"route",bundlePath:"app/api/stripe/webhook/route"},resolvedPagePath:"/Users/alexanderamundsen/hepta/hepta-3/app/api/stripe/webhook/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:_}=d,b="/api/stripe/webhook/route";function v(){return(0,n.patchFetch)({serverHooks:_,staticGenerationAsyncStorage:g})}},69206:(e,t,r)=>{"use strict";r.d(t,{Ag:()=>i,Ce:()=>u,Gl:()=>c,Z$:()=>l,a7:()=>p,wK:()=>a,zu:()=>d});var o=r(48472);let i=(()=>{let e="sk_test_51NTj6ECBZbubqLlTavZEEYr8YqLtMwVYfzIY8EyT3kXY2yuSv6z7hsiQ2omjZnQ1TMIFee3emq7HIcMAe4rWdAoc00CZhpLtEf";if(console.log("\n--- DEBUG: lib/stripe.ts -> getStripeInstance ---"),console.log("NODE_ENV:","production"),console.log("Raw STRIPE_SECRET_KEY from env:",e),!e)return console.warn("⚠️ lib/stripe.ts: STRIPE_SECRET_KEY is NOT SET in environment variables. Stripe operations will be mocked or fail."),null;if(e.startsWith("sk_live_"))console.warn("\uD83D\uDD34 lib/stripe.ts: WARNING: Attempting to use a LIVE Stripe key (sk_live_).");else if(e.startsWith("sk_test_"))console.log("✅ lib/stripe.ts: Using a TEST Stripe key (sk_test_). This is good for development.");else{let t=e.length>14?e.substring(0,7)+"..."+e.substring(e.length-4):e;return console.warn(`⚠️ lib/stripe.ts: STRIPE_SECRET_KEY ("${t}") does not look like a valid Stripe secret key (should start with sk_test_ or sk_live_).`),null}try{let t=e.length>14?e.substring(0,7)+"..."+e.substring(e.length-4):e;console.log(`lib/stripe.ts: Attempting to initialize Stripe with API key: ${t}`);let r=new o.Z(e,{apiVersion:"2023-10-16",typescript:!0});return console.log("✅ lib/stripe.ts: Stripe initialized successfully."),r}catch(e){return console.error("❌ lib/stripe.ts: Failed to initialize Stripe with API key. Error:",e),null}})(),s=(e,...t)=>{},n=e=>Math.round(100*e),a=async(e,t,r)=>{if(s("createCustomer - Start",{email:e,name:t,metadata:r}),console.log("--- DEBUG: lib/stripe.ts -> createCustomer ---"),console.log("Is 'stripe' object initialized here?",i?"YES":"NO - Stripe key likely missing/invalid in env!"),!i)return console.warn("⚠️ lib/stripe.ts: Stripe instance is null in createCustomer. Returning MOCK customer."),{id:"cus_mock_STRIPE_NULL_"+Date.now().toString(36)+Math.random().toString(36).substring(2),email:e,name:t,metadata:r,object:"customer",created:Math.floor(Date.now()/1e3),error:!0,message:"Stripe not initialized (null instance), returning mock customer."};try{console.log(`lib/stripe.ts: Attempting REAL Stripe API call: customers.create for email: ${e}`);let o={email:e};t&&(o.name=t),r&&(o.metadata=r);let s=await i.customers.create(o);return console.log("✅ lib/stripe.ts: Stripe customer created successfully via API. ID:",s.id),s}catch(o){return console.error("❌ lib/stripe.ts: Error calling Stripe API (customers.create):",o),{id:"cus_mock_API_ERROR_"+Date.now().toString(36)+Math.random().toString(36).substring(2),email:e,name:t,metadata:r,object:"customer",created:Math.floor(Date.now()/1e3),error:!0,message:o.message||"Unknown error during Stripe API call to create customer"}}},c=async(e,t="nok",r)=>{if(s("createPaymentIntent - Start",{amount:e,currency:t,customerId:r}),console.log("--- DEBUG: lib/stripe.ts -> createPaymentIntent ---"),console.log("Is 'stripe' object initialized here?",i?"YES":"NO - Stripe key likely missing/invalid in env!"),!i){console.warn("⚠️ lib/stripe.ts: Stripe instance is null in createPaymentIntent. Returning MOCK Payment Intent.");let o="pi_mock_secret_STRIPE_NULL_"+Date.now().toString(36)+Math.random().toString(36).substring(2);return{id:"pi_mock_STRIPE_NULL_"+Date.now().toString(36)+Math.random().toString(36).substring(2),amount:n(e),currency:t,client_secret:o,customer:r,status:"requires_payment_method",object:"payment_intent",error:!0,message:"Stripe not initialized (null instance), returning mock payment intent."}}try{console.log(`lib/stripe.ts: Attempting REAL Stripe API call: paymentIntents.create. Amount: ${e}, Currency: ${t}, CustomerID: ${r||"None"}`);let o={amount:n(e),currency:t,automatic_payment_methods:{enabled:!0}};r&&(o.customer=r);let s=await i.paymentIntents.create(o);return console.log("✅ lib/stripe.ts: REAL Stripe Payment Intent created. Client Secret starts with:",s.client_secret?.substring(0,15)+"..."),s}catch(i){console.error("❌ lib/stripe.ts: Error calling Stripe API (paymentIntents.create):",i);let o="pi_mock_secret_API_ERROR_"+Date.now().toString(36)+Math.random().toString(36).substring(2);return{id:"pi_mock_API_ERROR_"+Date.now().toString(36)+Math.random().toString(36).substring(2),amount:n(e),currency:t,client_secret:o,customer:r,status:"requires_payment_method",object:"payment_intent",error:!0,message:i.message||"Unknown error during Stripe API call to create payment intent"}}},l=async(e,t,r,o="nok")=>{if(s("createInvoice - Start",{customerId:e,description:t,amount:r,currency:o}),console.log("--- DEBUG: lib/stripe.ts -> createInvoice --- 'stripe' initialized?",i?"YES":"NO"),!i)return console.warn("⚠️ lib/stripe.ts: Stripe instance is null in createInvoice. Returning MOCK invoice."),{id:"in_mock_STRIPE_NULL_"+Date.now().toString(36),customer:e,amount_due:n(r),currency:o,description:t,status:"open",due_date:Math.floor(Date.now()/1e3)+2592e3,created:Math.floor(Date.now()/1e3),error:!0,message:"Stripe not initialized"};try{console.log(`lib/stripe.ts: Attempting REAL Stripe API call for createInvoice. Customer: ${e}`),await i.invoiceItems.create({customer:e,amount:n(r),currency:o,description:t});let s=await i.invoices.create({customer:e,auto_advance:!0,collection_method:"send_invoice",days_until_due:30}),a=await i.invoices.finalizeInvoice(s.id);return await i.invoices.sendInvoice(a.id),console.log("✅ lib/stripe.ts: REAL Stripe Invoice created and sent. ID:",a.id),a}catch(i){return console.error("❌ lib/stripe.ts: Error creating REAL Stripe invoice:",i),{id:"in_mock_API_ERROR_"+Date.now().toString(36),customer:e,amount_due:n(r),currency:o,description:t,status:"open",due_date:Math.floor(Date.now()/1e3)+2592e3,created:Math.floor(Date.now()/1e3),error:!0,message:i.message||"Unknown API error creating invoice"}}},u=async e=>{if(s("getCustomerInvoices - Start",{customerId:e}),console.log("--- DEBUG: lib/stripe.ts -> getCustomerInvoices --- 'stripe' initialized?",i?"YES":"NO"),!i)return console.warn("⚠️ lib/stripe.ts: Stripe instance is null in getCustomerInvoices. Returning MOCK invoices."),[{id:"in_mock_STRIPE_NULL_cust_inv",customer:e,amount_due:1e4,currency:"nok",status:"open",due_date:Math.floor(Date.now()/1e3)+2592e3,hosted_invoice_url:"#",created:Math.floor(Date.now()/1e3)-86400,error:!0,message:"Stripe not initialized"}];try{console.log(`lib/stripe.ts: Attempting REAL Stripe API call for getCustomerInvoices. Customer: ${e}`);let t=await i.invoices.list({customer:e,limit:100});return console.log(`✅ lib/stripe.ts: Fetched ${t.data.length} REAL Stripe Invoices for customer.`),t.data}catch(t){return console.error("❌ lib/stripe.ts: Error fetching REAL customer invoices:",t),[{id:"in_mock_API_ERROR_cust_inv",customer:e,amount_due:1e4,currency:"nok",status:"open",due_date:Math.floor(Date.now()/1e3)+2592e3,hosted_invoice_url:"#",created:Math.floor(Date.now()/1e3)-86400,error:!0,message:t.message||"Unknown API error fetching invoices"}]}},p=async e=>{if(s("payInvoice - Start",{invoiceId:e}),console.log("--- DEBUG: lib/stripe.ts -> payInvoice --- 'stripe' initialized?",i?"YES":"NO"),!i)return console.warn("⚠️ lib/stripe.ts: Stripe instance is null in payInvoice. Returning MOCK payment status."),{id:e,status:"paid",paid:!0,amount_paid:1e4,currency:"nok",error:!0,message:"Stripe not initialized"};try{console.log(`lib/stripe.ts: Attempting REAL Stripe API call for payInvoice. Invoice ID: ${e}`);let t=await i.invoices.pay(e);return console.log("✅ lib/stripe.ts: REAL Stripe Invoice paid. Status:",t.status),t}catch(t){return console.error("❌ lib/stripe.ts: Error paying REAL Stripe invoice:",t),{id:e,status:"open",paid:!1,error:!0,message:t.message||"Unknown API error paying invoice"}}},d=async e=>{throw s("createTestInvoice - Start",{customerId:e}),console.log("--- DEBUG: lib/stripe.ts -> createTestInvoice --- 'stripe' initialized?",i?"YES":"NO"),console.error("❌ lib/stripe.ts: createTestInvoice called outside development mode."),Error("Test invoices can only be created in development mode")}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[9276,5972,958,8472],()=>r(57812));module.exports=o})();